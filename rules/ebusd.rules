val String filename = "ebusd.rules"

rule "Periodic eBus data update using MQTT get's"
when
    Time cron "0 0/5 * * * ?"
then
  val actions = getActions("mqtt","mqtt:broker:mosquitto")
  actions.publishMQTT("ebusd/bai/FlowTemp/get"," ")    
  actions.publishMQTT("ebusd/bai/ReturnTemp/get"," ") 
  actions.publishMQTT("ebusd/bai/CirPump/get"," ") 
  actions.publishMQTT("ebusd/b7v/DisplayedOutsideTemp/get"," ") 
  actions.publishMQTT("ebusd/b7v/z1RoomTemp/get"," ") 
  actions.publishMQTT("ebusd/b7v/z1DayTemp/get"," ") 
  actions.publishMQTT("ebusd/b7v/z1NightTemp/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrEnergySumHwcThisMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrEnergySumHcThisMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrEnergySumHwcLastMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrEnergySumHcLastMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrEnergySumHwc/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrEnergySumHc/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrEnergySum/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrFuelSumHwcThisMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrFuelSumHcThisMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrFuelSumHwcLastMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrFuelSumHcLastMonth/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrFuelSumHwc/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrFuelSumHc/get"," ") 
  actions.publishMQTT("ebusd/b7v/PrFuelSum/get"," ") 
  logInfo(filename, "sending MQTT get's to eBus: " + now.toString)
end


// old style, using the exec binding to publish through mosquitto
//Thing exec:command:ebusd_bai_CirPump [command="mosquitto_pub -n -t ebus/bai/CirPump/get", interval=60, timeout=5, autorun=false]
